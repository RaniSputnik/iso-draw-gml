<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_balloon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//whether the unit is currently being controlled by the player
unitSelected=0;
//whether the unit is allowed to move or not
moveAllowed=0;

//where the unit will try to move to
goalX=x;
goalY=y;
//how high up in the air the ballon is
z=150;

//the baloons current isometric co-ordinates
//ie. where is is on the screen
isox=0;
isoy=0;

//the selection distance
snapDistance=24;

//the air resistance
friction=0.01;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//find the isometric (drawing) co-ordinates
isox=iso_get_x(x,y,z);
isoy=iso_get_y(x,y,z);
//find the correct depth to draw at
depth=iso_get_depth_view(isoy+z+8,0);

//check if we can move
if point_distance(x,y,goalX,goalY) &lt; 3
  moveAllowed=0;
//move the baloon
speed+=0.02*(moveAllowed);
//limit the speed
speed=min(speed,0.4);
//find its correct direction
direction=rotate(direction,point_direction(x,y,goalX,goalY),1);
//give it the right image
image_index=round(direction/10);

//show us if the baloon is selected
if (unitSelected)
  image_blend=c_gray;
else
  image_blend=c_white;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="57">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if the baloon is selected
if (unitSelected) {
  var _x,_y;
  //the position we are telling it to go
  _x=iso_get_regx(mouse_x,mouse_y,0);
  _y=iso_get_regy(mouse_x,mouse_y,0);
  //if we are telling it to move outside the room
  if !(within(_x,_y,0,0,room_width,room_height))
    //don't bother
    exit;
  
  //set its new goal
  goalX=_x;
  goalY=_y;
  //it may now move there
  moveAllowed=1; }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw our shaddow on the ground
draw_sprite(spr_shadow,0,isox,isoy+z);

//draw our goal
if (moveAllowed) &amp;&amp; (unitSelected) {
  var _x,_y;
  _x=iso_get_x(goalX,goalY,0);
  _y=iso_get_y(goalX,goalY,0);
  
  draw_set_alpha(0.5);
  draw_line(isox,isoy+z,_x,_y);
  draw_set_alpha(1);
  draw_sprite(spr_goal,0,_x,_y); }
  
//draw us up in the air
draw_sprite_ext(sprite_index,image_index,isox,isoy,image_xscale,image_yscale,image_angle,image_blend,image_alpha);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
