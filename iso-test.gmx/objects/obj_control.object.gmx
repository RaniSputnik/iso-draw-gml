<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//begin the isometric projection 
//READ THE GAME INFO
iso_start(0.5);
//the current direction of projection
iprojection=ipro_ne;

//whether or not we are selecting
selecting=0;
//Green rectangle coordinates
selectX1 = 0;
selectY1 = 0;
selectX2 = 0;
selectY2 = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//switch views
switch (iprojection) {
  case ipro_ne: iprojection=ipro_se; break;
  case ipro_se: iprojection=ipro_sw; break;
  case ipro_sw: iprojection=ipro_nw; break; 
  case ipro_nw: iprojection=ipro_ne; break; }
  
//reset the projection to our new view
iso_set_projection(iprojection);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if we aren't selecting don't bother
if !(selecting) exit;
//we are done selecting
selecting=0;
//update the final position
selectX2=mouse_x;
selectY2=mouse_y;
//reset the selection
obj_balloon.unitSelected=0;


//find out which way we have made the rectangle
var _x1,_y1,_x2,_y2;

//decide which is the left-most corner
if selectX1 &gt; selectX2 {
  _x1=selectX2;
  _x2=selectX1; }
else {
  _x1=selectX1;
  _x2=selectX2; }
//decide which is the top-most corner
if selectY1 &gt; selectY2 {
  _y1=selectY2;
  _y2=selectY1; }
else {
  _y1=selectY1;
  _y2=selectY2; }

//find out if the isometric position of the baloon is within this rectangle
if (within(obj_balloon.isox,obj_balloon.isoy,_x1-obj_balloon.snapDistance,_y1-obj_balloon.snapDistance,_x2+obj_balloon.snapDistance,_y2+obj_balloon.snapDistance)) {
  //if it is, select the baloon
  obj_balloon.unitSelected=1; }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//we are now selecting
selecting=1;
//where we are starting from
selectX1=mouse_x;
selectY1=mouse_y;
//update the final position
selectX2=mouse_x;
selectY2=mouse_y;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if we aren't selecting don't bother
if !(selecting) exit;
//update the final position
selectX2=mouse_x;
selectY2=mouse_y;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//change the alpha
draw_set_alpha(0.2);
//draw the isometric box
draw_primitive_begin(pr_linestrip);
    draw_vertex(0,400*global.iso_factor);
    draw_vertex(400,800*global.iso_factor);
    draw_vertex(800,400*global.iso_factor);
    draw_vertex(400,0);
    draw_vertex(0,400*global.iso_factor);
draw_primitive_end();
draw_set_alpha(1);

//draw the selection box
if (obj_control.selecting) 
{
    draw_set_alpha(0.2);
    draw_rectangle(selectX1,selectY1,selectX2,selectY2,0);
    draw_set_alpha(1);
    draw_rectangle(selectX1,selectY1,selectX2,selectY2,1); 
}

draw_text(16,16,obj_balloon.depth);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
